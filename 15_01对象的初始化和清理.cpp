#define _CRT_SECURE_NO_WARNINGS 1   
#include <iostream>
#include <string>
using namespace std;

//
// 构造函数和析构函数可以解决上述问题，这两个函数将会被编译器自动调用，完成对象初始化和清理工作
// 对象的初始化和清理工作是编译器强制我们做的事情
// 如果我们不提供构造和西沟，编译器会提供
// 编译器提供的构造函数和析构函数是空实现
// 
// 构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器调用，无需手动调用
// 语法：类名（）{}
// 没有返回值也不写void
// 函数名称与类名相同
// 可以有参数，因此可以发生重载
// 程序在调用对象时自动调用，无需手动调用，且只会调用一次
// 
// 析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作
// 语法：~类名（）{}
// 没有返回值也不写void
// 函数名称与类名相同，在名称前加上符号 ~
// 析构函数不可以有参数，因此不可以发生重载
// 也是调用一次
//

class Person
{
public:
	//1、创建构造函数
	Person()
	{
		cout << "Person 的构造函数的调用" << endl;
	}
	//2.创建析构函数
	~Person()
	{
		cout << "person 的析构函数的调用" << endl;
	}
};

void test1501()
{
	Person p;	//在栈上的数据，在test1501之执行完成后，释放这个对象
}

int main1501()
{
	//test1501();
	Person p;    //只打印构造，不打印析构
	system("pause");  
	return 0;
}